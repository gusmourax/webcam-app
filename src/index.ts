import { app, BrowserWindow, screen } from 'electron';
// This allows TypeScript to pick up the magic constant that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) { // eslint-disable-line global-require
    app.quit();
}

const createWindow = (): BrowserWindow => {

    const widthPercentage = 20;
    const heightPercentage = 20;

    const display = screen.getPrimaryDisplay();
    const screenWidth = display.bounds.width;
    const screenHeight = display.bounds.height;

    const width = Number(((screenWidth * widthPercentage) / 100).toFixed());
    const height = Number(((screenHeight * heightPercentage) / 100).toFixed());

    // Create the browser window.
    const mainWindow = new BrowserWindow({
        height,
        width,
        x: screenWidth - width,
        y: screenHeight - height,
        frame: false,
        alwaysOnTop: true,
        minimizable: false,
        closable: false,
        maximizable: false,
        maxHeight: height,
        maxWidth: width,
        minHeight: height,
        minWidth: width,
        fullscreenable: false,
        resizable: false,
        skipTaskbar: true,
    });

    // and load the index.html of the app.
    mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

    return mainWindow;
};

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', () => {
    const window = createWindow();

    window.on('close', (event) => {
        event.preventDefault();
    })
});

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') {
        app.quit();
    }
});

app.on('activate', () => {
    // On OS X it's common to re-create a window in the app when the
    // dock icon is clicked and there are no other windows open.
    if (BrowserWindow.getAllWindows().length === 0) {
        createWindow();
    }
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
